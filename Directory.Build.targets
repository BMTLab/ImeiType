<!-- ./Directory.Build.targets -->
<Project>

    <PropertyGroup>
        <VersionFile>VERSION.g.txt</VersionFile>
        <ArtifactsPath>$(MSBuildThisFileDirectory)artifacts</ArtifactsPath>
        <PackageReleaseNotesFile Condition="'$(PackageReleaseNotesFile)'==''">
            $(ArtifactsPath)/package/release/ReleaseNotes.md
        </PackageReleaseNotesFile>
    </PropertyGroup>

    <Target Name="_StartBuild" BeforeTargets="Build">
        <Message Text="------- $(AssemblyName):$(Version) is building" Importance="High"/>
    </Target>

    <Target Name="_EndBuild" AfterTargets="Build">
        <WriteLinesToFile File="$(VersionFile)" Lines="$(Version)" Overwrite="true"/>
    </Target>

    <Target Name="_SetPackageReleaseNotes"
            BeforeTargets="GenerateNuspec"
            Condition="'$(Configuration)'=='Release' And Exists('$(PackageReleaseNotesFile)')">
        <ReadLinesFromFile File="$(PackageReleaseNotesFile)">
            <Output TaskParameter="Lines" ItemName="_ReleaseNotesLines"/>
        </ReadLinesFromFile>
        <PropertyGroup>
            <!-- Convert an array of strings to text with \n -->
            <PackageReleaseNotes>@(_ReleaseNotesLines, '%0A')</PackageReleaseNotes>
        </PropertyGroup>
        <Message Text="------- Release notes file: $(PackageReleaseNotesFile)" Importance="High"/>
        <Message Text="------- PackageReleaseNotes length: $([System.String]::Copy('$(PackageReleaseNotes)').Length)"
                 Importance="Low"/>
    </Target>

    <ItemGroup>
        <None Update="$(VersionFile)">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </None>
    </ItemGroup>

</Project>